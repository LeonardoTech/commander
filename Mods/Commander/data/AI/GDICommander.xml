<?xml version="1.0" encoding="utf-8"?>
<AssetDeclaration xmlns="uri:ea.com:eala:asset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Tags></Tags>
    <Includes></Includes>

    <!--
    AIPersonalityDefinition declares several important attributes of your AI.
        id - the name that will appear in the WorldBuilder Player List drop-down menu
        PersonalityType - this value must match the id field
        PersonalityUIName - references an entry in the cnc3.str file to provide the Skirmish Select Menu string
        SkirmishPersonality - set this to "false" to have the AI appear in WorldBuilder
        SecondsTillTargetsCanExpire - this is the amount of time before the AI will choose another candidate for an TacticalAITarget.
           It is used to make sure the AI does not continue to select old targets.
        ChanceForTargetToExpire - the chance the target will expire after the designated amount of time from SecondsTillTargetsCanExpire
        MaxBuildingsToBeDefensiveTarget_Small - this is unused
        MaxBuildingsToBeDefensiveTarget_Med - this is unused
        ChanceForUnitsToUpgrade - this is unused
        ChanceToUseAllUnitsForDefenseTarget_Small - this is unused
        ChanceToUseAllUnitsForDefenseTarget_Med - this is unused
        ChanceToUseAllUnitsForDefenseTarget_Large - this is unused
        DesiredExcessPowerBuffer - determines how much extra power the AI attempts to maintain
        BaseCompactness - a value between 0 and 1 that determines how compact an AI builds its base.  Only values between 0.5 and 1 will actually work.
           A value of 1 is the furthest out on the build radius circle; a lower value is closer in from the build radius circle.
        DefaultThreatFindRadius - deprecated or unused value
        UnitBuilderCostEffectivenessWeight - determines how heavily the AI relies on cost effectiveness (power / cost) in deciding what unit to build.
           Lowering this will make the AI pick the best unit without concern for cost.
        UnitBuilderMoneyVersusTimePreference - determines if the AI wants to build units with low build times relative to cost or high build times relative to cost.
           Since all units in C&C3 were normalized to have build time and costs proportional this is effectively unused.
        UnitBuilderOverallOffensivePreference - weighs a unit's damage more heavily than its health and armor when the AI decides what unit to build.
        UnitBuilderOverallDefensivePreference - weighs a unit's health and armor more heavily than its damage when the AI decides what unit to build.
        Expansion_TiberiumSearchRadius - the radius around a playerâ€™s base to consider a Tiberium field as accessible from that base
           The AI only picks Tiberium fields more than this distance away from any base to expand to.
        Expansion_MaxTiberiumRemaining - the amount of tiberium around all the AI's bases must drop below this value before it tries to expand.
        ReactiveDefenseRadius - determines how far out an AI will defend its base using the ReactiveDefense tactic (units are WorldBuilder feet)
        RepairBuildingsAtDifficulty - determines at what difficulties the AI will repair their buildings.
           EASY MEDIUM HARD and BRUTAL are the legal values for all difficulty fields.
        EmergencyManagerHandleNoPowerAtDifficulty - determines at what difficulties the AI emergency manager will manage being low-power
           None of the Emergency Managers work for a SkirmishAI loaded through WorldBuilder.
        EmergencyManagerHandleNoIncomeAtDifficulty - determines at what difficulties the AI emergency manager will manage having no income
        EmergencyManagerHandleNoConyardAtDifficulty - determines at what difficulties the AI emergecny manager will manage having no conyard
        StructureSaveChanceEasy - determines percentage chance that the AI will sell a building before an engineer captures it on Easy
        StructureSaveChanceMedium - determines percentage chance that the AI will sell a building before an engineer captures it on Medium
        StructureSaveChanceHard - determines percentage chance that the AI will sell a building before an engineer captures it on Hard
    -->
    <AIPersonalityDefinition id="6GDICommander"
                             PersonalityType="6GDICommander"
                             PersonalityUIName="Personality:Commander"
                             SkirmishPersonality="true"
                             SecondsTillTargetsCanExpire="10.0"
                             ChanceForTargetToExpire="100"
                             MaxBuildingsToBeDefensiveTarget_Small="0"
                             MaxBuildingsToBeDefensiveTarget_Med="0"
                             ChanceForUnitsToUpgrade="100"
                             ChanceToUseAllUnitsForDefenseTarget_Small="0"
                             ChanceToUseAllUnitsForDefenseTarget_Med="0"
                             ChanceToUseAllUnitsForDefenseTarget_Large="0"
                             DesiredExcessPowerBuffer="10"
                             BaseCompactness="1.0"
                             DefaultThreatFindRadius="0"
                             UnitBuilderCostEffectivenessWeight="1.0"
                             UnitBuilderMoneyVersusTimePreference="0.5"
                             UnitBuilderOverallOffensivePreference="100%"
                             UnitBuilderOverallDefensivePreference="110%"
                             Expansion_TiberiumSearchRadius="500000"
                             Expansion_MaxTiberiumRemaining="999999"
                             ReactiveDefenseRadius="1000"
                             RepairBuildingsAtDifficulty="MEDIUM HARD BRUTAL"
                             EmergencyManagerHandleNoPowerAtDifficulty="MEDIUM HARD BRUTAL"
                             EmergencyManagerHandleNoIncomeAtDifficulty="EASY MEDIUM HARD BRUTAL"
                             EmergencyManagerHandleNoConyardAtDifficulty="EASY MEDIUM HARD BRUTAL"
                             StructureSaveChanceEasy="0.0"
                             StructureSaveChanceMedium="0.01"
                             StructureSaveChanceHard="1.0">

        <Side>GDI</Side>

        <!--
        BuildDelayRange specified how long the AI will delay between using a queue after producing a unit from it.
        This is useful for slowing down an AI at easier difficulty levels.  The values are as follows:
            MinDelay - the minimum delay the AI will use for a queue when it is significantly outmatched
            MaxDelay - the maximum delay the AI will use for a queue when it is significantly better than the player
            MinTTKRatio -
            MaxTTKRatio -
            Difficulty - the difficulty which this build delay applies to
        -->
        <BuildDelayRange MinDelay="5s" MaxDelay="60s" MinTTKRatio="0.5" MaxTTKRatio="1.5" Difficulty="EASY"/>
        <BuildDelayRange MinDelay="0s" MaxDelay="30s" MinTTKRatio="0.5" MaxTTKRatio="1.5" Difficulty="MEDIUM"/>
        <BuildDelayRange MinDelay="0s" MaxDelay="15s" MinTTKRatio="0.5" MaxTTKRatio="1.5" Difficulty="HARD"/>
        <BuildDelayRange MinDelay="0s" MaxDelay="0s" MinTTKRatio="0.5" MaxTTKRatio="1.5" Difficulty="BRUTAL"/>

        <!--
        The UnitBuilderUnitChoiceStrategy defines which units the AI will build by analyzing the opponents units.
            Shape - the Unit Builder analyzes every units' effectiveness vs. the opponents army and looks at a graph of the effectiveness.
                    In the case below, on Easy, the UnitBuilder is looking at the worst counters the opponents units and picking them.
                    In brutal, it is looking for the best counters for the opponents units and picking those.
            StandardDeviation - determines the range of units an AI will pick based on the shape defined.
                                For example, if an AI is looking for units with a shape of "Middle" with a StandardDeviation of 2, it will
                                pick from units that are the most middle-of-the-road counter to the player and units that are two positions worse
                                and two positions better (for a total of 5 units).
            Difficulty - determines on what difficulty the UnitBuilderUnitChoiceStrategy functions.  The possible choices are Easy, Medium
                         Hard and Brutal.
        -->
        <!--<UnitBuilderUnitChoiceStrategy Shape="BEST" StandardDeviation="0.25" Difficulty="HARD BRUTAL"/>-->

        <!--
        UnitBuilderUnitChoiceStrategyAdaptive is an alternative to the UnitBuilderUnitChoiceStrategy.  The adaptive version analyzes how effective
        the AI's choices have been and attempts to modify future unit choices based on this analysis.  You should not use an Adaptive unit builder
        in the same difficulty that you are using an non-Adaptive strategy.

        The Adaptive unit builder uses "Effectiveness" and "Efficiency" in its evaluation (whereas the normal unit builder above uses only
        effectiveness).  Effectiveness is the value that predicts how the two armies are stacked up.  Efficiency is a measure of how much
        stuff the AI has managed to kill (based on unit costs) and how much of its own units have been killed in the process (also based
        on unit costs).
            MinEffectiveness - This value determines
        -->
        <UnitBuilderUnitChoiceStrategyAdaptive MinEffectiveness="0.5" MaxEffectiveness="1.0" MinStandardDeviation="2.0" MaxStandardDeviation="0.5" MinEfficiency="1.0" MaxEfficiency="2.0" Difficulty="EASY"/>
        <UnitBuilderUnitChoiceStrategyAdaptive MinEffectiveness="0.0" MaxEffectiveness="0.5" MinStandardDeviation="0.25" MaxStandardDeviation="2.0" MinEfficiency="0.75" MaxEfficiency="1.0" Difficulty="MEDIUM"/>
        <UnitBuilderUnitChoiceStrategyAdaptive MinEffectiveness="0.0" MaxEffectiveness="0.5" MinStandardDeviation="0.25" MaxStandardDeviation="2.0" MinEfficiency="0.5" MaxEfficiency="1.0" Difficulty="HARD"/>
        <UnitBuilderUnitChoiceStrategyAdaptive MinEffectiveness="0.0" MaxEffectiveness="0.25" MinStandardDeviation="0.0" MaxStandardDeviation="0.25" MinEfficiency="0.0" MaxEfficiency="0.25" Difficulty="BRUTAL"/>

        <!--
        UnitBuilderEvaluationDelayRange determines how often the AI chooses a different type of unit to build based on its efficiency against
        the player.  It is primarily used on lower difficulties to stop the AI from producing a mixed group of units on lower difficulties.
            UseAllAvailableQueues - true or false; by default this is 'true' and the AI uses all its available queues to build
            MinDelay - the minimum amount of time before the AI decides to build a different unit from a production structure
            MaxDelay - the maxmimum amount of time before the AI decides to build a different unit from a production structure
            MinEfficiency - determines when the min delay is used; if value is 0.75, then the AI will evaluate a new unit to build
                out of a production structure at the minimum delay when it is 75% as efficient as the player
            MaxEfficiency - determines when the max delay is used; if the value is 1.0, then the AI will evaluate a new unit to build
                out of a production structure at the the maximum delay when it is just as efficient as the player (i.e when they have destroyed
                units and base defenses of equal value to what the player has destroyed, with equal losses to the player)
        -->
        <UnitBuilderEvaluationDelayRange UseAllAvailableQueues="false" MinDelay="180s" MaxDelay="180s" MinEfficiency="1.0" MaxEfficiency="1.0" Difficulty="EASY"/>
        <UnitBuilderEvaluationDelayRange UseAllAvailableQueues="true" MinDelay="10s" MaxDelay="60s" MinEfficiency="0.75" MaxEfficiency="1.0" Difficulty="MEDIUM"/>

        <ResourceMultiplierCheat Percentage="200%" Difficulty="BRUTAL"/>

        <!--
        TacticalAITargets determine how many different targets an AI tries to pursue simultaneously.  The TacticalAITargets reference
        targets in the States files and attempts to run tactics in those states on the specified targets.  Having multiple of the same
        TacticalAITarget will mean that the AI will attempt to find more than one target of that type and run tactics on them.
        -->
        <TacticalTarget TacticalAITarget="PrimaryTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="PrimaryTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="PrimaryTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="PrimaryTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="PrimaryTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="PrimaryTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="PrimaryTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="PrimaryTarget" MaxTeamsPerTarget="1"/>

        <TacticalTarget TacticalAITarget="BombingAirstrike" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="BombingAirstrike" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="BombingAirstrike" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="BombingAirstrike" MaxTeamsPerTarget="1"/>

        <TacticalTarget TacticalAITarget="SiegeTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="SiegeTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="SiegeTarget" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="SiegeTarget" MaxTeamsPerTarget="1"/>

        <TacticalTarget TacticalAITarget="SpecialDefense" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="ExpansionDefense" MaxTeamsPerTarget="1"/>

        <TacticalTarget TacticalAITarget="CaptureTech" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="CaptureTech" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="Expansion" MaxTeamsPerTarget="1" UpdateTime="5s"/>
        <TacticalTarget TacticalAITarget="Crate" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="Husk" MaxTeamsPerTarget="1"/>
        <TacticalTarget TacticalAITarget="Husk" MaxTeamsPerTarget="1"/>

        <OpeningMove Name="GDICommanderCrane" Weight="100%" Difficulty="EASY MEDIUM HARD BRUTAL"/>

        <States State="GDICommanderSiege" Difficulty="EASY MEDIUM HARD BRUTAL"/>

        <States State="GDICommanderOverrunEarly" Difficulty="EASY MEDIUM HARD BRUTAL"/>
        <States State="GDICommanderOverrunMiddle" Difficulty="EASY MEDIUM HARD BRUTAL"/>
        <States State="GDICommanderOverrunLate" Difficulty="EASY MEDIUM HARD BRUTAL"/>

        <States State="GDICommanderDefensiveBombingRuns" Difficulty="EASY MEDIUM HARD BRUTAL"/>

        <States State="GDICommanderReactiveDefense" Difficulty="EASY MEDIUM HARD BRUTAL"/>

        <States State="GDICommanderExpansion" Difficulty="EASY MEDIUM HARD BRUTAL"/>
        <States State="GDICaptureTech" Difficulty="EASY MEDIUM HARD BRUTAL"/>
        <States State="GDIHuskCapture" Difficulty="EASY MEDIUM HARD BRUTAL"/>

        <States State="GDIUnitPreferences" Difficulty="MEDIUM HARD BRUTAL"/>

        <BudgetStates State="CommanderOpeningMoveBudget" Difficulty="EASY MEDIUM HARD BRUTAL"/>
        <BudgetStates State="CommanderEarlyGameBudget" Difficulty="EASY MEDIUM HARD BRUTAL"/>
        <BudgetStates State="CommanderMidGameBudget" Difficulty="EASY MEDIUM HARD BRUTAL"/>
        <BudgetStates State="CommanderLateGameBudget" Difficulty="EASY MEDIUM HARD BRUTAL"/>

        <BudgetStates State="CommanderFullInvestmentBudget" Difficulty="HARD BRUTAL"/>
        <BudgetStates State="CommanderInvestmentFinishBudget" Difficulty="EASY MEDIUM HARD BRUTAL"/>

        <BudgetStates State="CommanderTechByTimeBudget" Difficulty="HARD BRUTAL"/>
        <BudgetStates State="CommanderTechByMoneyBudget" Difficulty="MEDIUM HARD BRUTAL"/>
        <BudgetStates State="CommanderTechFinishBudget" Difficulty="EASY MEDIUM HARD BRUTAL"/>
    </AIPersonalityDefinition>
</AssetDeclaration>
